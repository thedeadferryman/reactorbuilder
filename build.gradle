buildscript {
    repositories {
        jcenter()
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.matthewprenger.cursegradle'

version = "${mc_version}-${mod_version}"
group = "sonar.reactorbuilder"
archivesBaseName = "NC-ReactorBuilder"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    mappings = "snapshot_20171003"
}

repositories {
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    flatDir {
        dirs 'libs'
    }
}

tasks.build.dependsOn shadowJar

shadowJar {
    classifier = ""
    dependencies {
        include(dependency('simplelibrary:SimpleLibraryPlus-1.3'))
    }
}

reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}

dependencies {
    compileOnly "nuclearcraft-overhauled:NuclearCraft:${nuclearcraft_version}:${mc_version}"
    runtimeOnly "nuclearcraft-overhauled:NuclearCraft:${nuclearcraft_version}:${mc_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

curseforge {
    project {
        id = curseforge_id
        apiKey = System.getenv('CURSE_API_KEY')

        changelog = file('CHANGELOG.md')
        changelogType = 'markdown'

        releaseType = mod_version.matches(/.*[a-z]$/) ? 'beta' : 'release'

        mainArtifact jar
        addArtifact sourceJar
    }
}